package com.hs.advertise.service;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.support.annotation.Nullable;

import com.alibaba.fastjson.JSONObject;
import com.google.gson.Gson;
import com.hs.advertise.MyApplication;
import com.hs.advertise.business.PlayLogicUtil;
import com.hs.advertise.config.CloudConfig;
import com.hs.advertise.config.IntentParam;
import com.hs.advertise.config.IntentValue;
import com.hs.advertise.config.TypeParam;
import com.hs.advertise.config.URLs;
import com.hs.advertise.mvp.model.bean.AdConfig;
import com.hs.advertise.mvp.model.bean.AdConfigMap;
import com.hs.advertise.mvp.model.bean.AdInfo;
import com.hs.advertise.mvp.model.iterfaces.UserInfoBiz;
import com.hs.advertise.mvp.present.UserInfoPresent;
import com.hs.advertise.receiver.BroadcastAction;
import com.hs.advertise.ui.activity.SplashActivity;
import com.hs.advertise.utils.ActivityUtil;
import com.hs.advertise.utils.net.NetwrokUtil;
import com.lunzn.tool.log.LogUtil;

/**
 * Desc: 下载后台服务
 * <p>
 * Author: ganxinrong
 * PackageName: com.hs.advertise.service
 * ProjectName: Advertise
 * Date: 2020/3/11 10:40
 */
public class DownloadService extends Service implements UserInfoBiz {

    private static final String TAG = DownloadService.class.getSimpleName();
    private UserInfoPresent mUserInfoPresent;
    private int activityFlag;
    private int updateType;

    @Override
    public void onCreate() {
        super.onCreate();
        mUserInfoPresent = new UserInfoPresent(this, this);
    }

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }


    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        if (intent == null) {
            LogUtil.i(TAG, "service intent为空");
            return START_STICKY;
        }
        activityFlag = intent.getIntExtra(IntentParam.KEY_ACTIVITY_FLAG, -1);
        updateType = intent.getIntExtra("updateType", 0);
        LogUtil.i(TAG, "activityFlag:" + activityFlag);
        LogUtil.i(TAG, "updateType:" + updateType);
        if (NetwrokUtil.isNetworkConnected(this)) {
            Long dataVersion = CloudConfig.getCloudConfig().getLong(getApplicationContext(), CloudConfig.KEY_DATA_VERSION);
            LogUtil.i(TAG, "后台下载服务，去请求数据 dataVersion=" + dataVersion);
            AdConfigMap map = new AdConfigMap();
            map.setDataVersion(dataVersion);
            mUserInfoPresent.commonOperate(URLs.BASE_URL + URLs.AD_CONFIG_URL, map.getMapData(), "post");
        }
        return START_STICKY;
    }

    /**
     * 请求数据回调
     *
     * @param url
     * @param object
     */
    @Override
    public void onSuccess(String url, final Object object) {
        String respJson = JSONObject.toJSONString(object);
        LogUtil.i(TAG, "后台下载服务，响应数据：" + respJson);
        final AdConfig adConfig = new Gson().fromJson(respJson, AdConfig.class);
        if (adConfig.getRetCode() == 0 && adConfig.getData() != null) {
            if (adConfig.getData().getDataVersion() != 0) {

                MyApplication.getInstance().setAdConfig(adConfig);
                CloudConfig.getCloudConfig().putLong(getApplicationContext(), CloudConfig.KEY_DATA_VERSION, adConfig.getData().getDataVersion());
                CloudConfig.getCloudConfig().putString(getApplicationContext(), CloudConfig.KEY_ADCONFIG, respJson);
                AdInfo mFullScreenAds = adConfig.getData().getFullScreenAds();

                //开机启动过来,但是之前没数据显示，现在有网络了
                if (activityFlag == IntentValue.ACTIVITY_FLAG_NO) {
                    if (mFullScreenAds != null && mFullScreenAds.getAdResources() != null && mFullScreenAds.getAdResources().size() > 0) {
                        PlayLogicUtil.bootStartActivity(getApplicationContext(), mFullScreenAds);
                    }
                    //非开机启动过来,直接启动广告APP
                } else if (activityFlag == IntentValue.ACTIVITY_FLAG_SPLASH) {
                    //此状态是显示一张默认图而已，所以刷新数据后得播放真正的全屏广告
                    if (mFullScreenAds != null && mFullScreenAds.getAdResources() != null && mFullScreenAds.getAdResources().size() > 0) {
                        LogUtil.i(TAG, "从播默认图到播真正的全屏广告");
                        ActivityUtil.getInstance().finishActivity(SplashActivity.class);
                        PlayLogicUtil.bootStartActivity(getApplicationContext(), mFullScreenAds);
                    }
                } else {
                    LogUtil.i(TAG, "发送更新广告广播");
                    String action = "";
                    if (mFullScreenAds.getType() == TypeParam.TYPE_MULTIPLE_VIDEO || mFullScreenAds.getType() == TypeParam.TYPE_SINGLE_VIDEO) {
                        action = BroadcastAction.ACTION_UPDATE_VIDEO;
                    } else {
                        action = BroadcastAction.ACTION_UPDATE_IMG;
                    }
                    if (updateType != 1) {
                        LogUtil.i(TAG, "发送更新广告广播，非推送");
                        Intent intent = new Intent(action);
                        intent.putExtra("isPush", 0);
                        sendBroadcast(intent);
                    } else {
                        LogUtil.i(TAG, "发送更新广告广播，推送");
                        Intent intent = new Intent(action);
                        intent.putExtra("isPush", 1);
                        sendBroadcast(intent);
                    }
                }
            }
        }
    }

    @Override
    public void onError(Throwable e) {

    }
}
