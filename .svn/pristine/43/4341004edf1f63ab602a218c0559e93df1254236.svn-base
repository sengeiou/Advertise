package com.hs.advertise.ui.activity;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;

import com.danikula.videocache.ProxyCacheUtils;
import com.hs.advertise.R;
import com.hs.advertise.business.PlayLogicUtil;
import com.hs.advertise.config.IntentParam;
import com.hs.advertise.config.IntentValue;
import com.hs.advertise.config.TypeParam;
import com.hs.advertise.model.MessageModel;
import com.hs.advertise.mvp.model.bean.AdInfo;
import com.hs.advertise.mvp.model.bean.AdResource;
import com.hs.advertise.utils.ActivityUtil;
import com.hs.advertise.utils.ArrayUtils;
import com.hs.advertise.utils.FileFileter;
import com.hs.advertise.utils.RxjavaUtils;
import com.hs.advertise.utils.StringUtils;
import com.hs.advertise.utils.net.NetwrokUtil;
import com.lunzn.tool.log.LogUtil;

import java.io.File;
import java.io.Serializable;
import java.util.List;


/**
 * Desc: 点击应用启动页面
 * <p>
 * Author: ganxinrong
 * PackageName: com.hs.advertise.ui.activity
 * ProjectName: Advertise
 * Date: 2020/3/11 10:40
 */
public class SplashActivity extends Activity {

    private static final String TAG = "Tag_" + SplashActivity.class.getSimpleName();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_splash);
        ActivityUtil.getInstance().addActivity(this);
        LogUtil.e(TAG, this.getClass().getSimpleName() + ",onCreate");
        RxjavaUtils.timer(50, new RxjavaUtils.IRxNext() {
            @Override
            public void doNext(long number) {
                goHome();
            }

            @Override
            public void onComplete() {

            }

        });
    }


    private void goHome() {
        AdInfo mFullScreenAds = PlayLogicUtil.getFullScreenAds();
        if (mFullScreenAds != null) {
            boolean isDefault = false;
            LogUtil.i(TAG, "type:" + mFullScreenAds.getType());
            //服务器type字段区分启动那个activity
            if (mFullScreenAds.getType() == TypeParam.TYPE_SINGLE_PHOTO || mFullScreenAds.getType() == TypeParam.TYPE_MULTIPLE_PHOTO) {
                LogUtil.i(TAG, "SplashActivity photo");
                Intent intent = new Intent(this, PhotoActivity.class);
                intent.putExtra(IntentParam.KEY_ADINFO, (Serializable) mFullScreenAds);
                intent.putExtra(IntentParam.KEY_AD_POSITION, IntentValue.AD_POSITION_BOOT);
                startActivity(intent);
            } else {
                List<AdResource> mAdResources = mFullScreenAds.getAdResources();
                int frontCount = mAdResources.size();
                LogUtil.e(TAG, "frontCount：" + frontCount);
                if (!NetwrokUtil.isNetworkConnected(this)) {
                    LogUtil.e(TAG, "无网络");
                    File file = new File(MessageModel.VIDEO_CACHE_LOCAL_PATH);
                    String[] files = file.list(new FileFileter());
                    for (int i = 0; i < files.length; i++) {
                        LogUtil.e(TAG, "目录里的文件：" + files[i]);
                    }
                    if (files.length != 0) {
                        for (int i = 0; i < mAdResources.size(); i++) {
                            AdResource mAdResource = mAdResources.get(i);
                            String name = ProxyCacheUtils.computeMD5(mAdResource.getUrl()) + "." + StringUtils.getExtension(mAdResource.getUrl());
                            LogUtil.e(TAG, "name：" + name + ",url:" + mAdResource.getUrl());
                            if (!ArrayUtils.contains(files, name)) {
                                LogUtil.e(TAG, "remove " + mAdResource.getUrl());
                                mAdResources.remove(i);
                            }
                        }
                    } else {
                        isDefault = true;
                    }
                }
                int behindCount = mAdResources.size();
                LogUtil.e(TAG, "behindCount：" + behindCount);
                if (isDefault || mAdResources.size() == 0) {
//                    playDefault();
                    SplashActivity.this.finish();
                } else {
                    LogUtil.i(TAG, "SplashActivity video");
                    Intent intent = new Intent(this, VideoActivity.class);
                    intent.putExtra(IntentParam.KEY_ADINFO, (Serializable) mFullScreenAds);
                    intent.putExtra(IntentParam.KEY_AD_POSITION, IntentValue.AD_POSITION_BOOT);
                    if (behindCount < frontCount) {
                        intent.putExtra(IntentParam.KEY_RESOURCES_REDUCE, 1);
                    }
                    startActivity(intent);
                }

            }
        } else {
            LogUtil.i(TAG, "SplashActivity defoult");
            //什么都没有，播放默认一张图
//            Intent intent = new Intent(this, PhotoActivity.class);
//            intent.putExtra(IntentParam.KEY_AD_POSITION, IntentValue.AD_POSITION_BOOT);
//            intent.putExtra(IntentParam.KEY_COME_FROM, IntentValue.COME_FORM_SPLASH);
//            startActivity(intent);
        }
        LogUtil.i(TAG, "SplashActivity finish end");
        SplashActivity.this.finish();
    }

    private void playDefault() {
        //什么都没有，播放默认一张图
        LogUtil.e(TAG, "playDefault");
        Intent defoultIntent = new Intent(this, PhotoActivity.class);
        defoultIntent.putExtra(IntentParam.KEY_AD_POSITION, IntentValue.AD_POSITION_BOOT);
        defoultIntent.putExtra(IntentParam.KEY_COME_FROM, IntentValue.COME_FORM_SPLASH);
        startActivity(defoultIntent);
        SplashActivity.this.finish();
        return;
    }
}
